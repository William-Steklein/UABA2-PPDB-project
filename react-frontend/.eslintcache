[{"C:\\dev\\Programming-project-databases\\react-frontend\\src\\index.js":"1","C:\\dev\\Programming-project-databases\\react-frontend\\src\\App.js":"2","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Navbar.js":"3","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Home.js":"4","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Footer.js":"5","C:\\dev\\Programming-project-databases\\react-frontend\\src\\NotFound.js":"6","C:\\dev\\Programming-project-databases\\react-frontend\\src\\BlogDetails.js":"7","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Create.js":"8","C:\\dev\\Programming-project-databases\\react-frontend\\src\\SignUp.js":"9","C:\\dev\\Programming-project-databases\\react-frontend\\src\\SignIn.js":"10","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Account.js":"11","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Contact.js":"12","C:\\dev\\Programming-project-databases\\react-frontend\\src\\useFetch.js":"13"},{"size":447,"mtime":1650279517532,"results":"14","hashOfConfig":"15"},{"size":1466,"mtime":1650287700873,"results":"16","hashOfConfig":"15"},{"size":711,"mtime":1650279517532,"results":"17","hashOfConfig":"15"},{"size":854,"mtime":1650287744396,"results":"18","hashOfConfig":"15"},{"size":1490,"mtime":1650279517532,"results":"19","hashOfConfig":"15"},{"size":275,"mtime":1650279517532,"results":"20","hashOfConfig":"15"},{"size":883,"mtime":1650279517529,"results":"21","hashOfConfig":"15"},{"size":1457,"mtime":1650279517532,"results":"22","hashOfConfig":"15"},{"size":3264,"mtime":1650279517532,"results":"23","hashOfConfig":"15"},{"size":4573,"mtime":1650279517532,"results":"24","hashOfConfig":"15"},{"size":592,"mtime":1650279517529,"results":"25","hashOfConfig":"15"},{"size":722,"mtime":1650231977854,"results":"26","hashOfConfig":"15"},{"size":1097,"mtime":1650279517536,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"740wku",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\dev\\Programming-project-databases\\react-frontend\\src\\index.js",[],["61","62"],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\App.js",["63","64"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport React, {useState} from \"react\";\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport Home from './Home';\r\nimport Create from './Create';\r\nimport BlogDetails from './BlogDetails';\r\nimport NotFound from './NotFound';\r\nimport SignUp from './SignUp';\r\nimport Account from './Account';\r\nimport SignIn from './SignIn';\r\nimport Contact from './Contact';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/account\">\r\n              <Account />\r\n            </Route>\r\n            <Route path=\"/sign_in\">\r\n              <SignIn />\r\n            </Route>\r\n            <Route path=\"/sign_up\">\r\n              <SignUp />\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n            <Route path=\"/blogs/:id\">\r\n              <BlogDetails />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Navbar.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\Home.js",["65","66","67"],"import useFetch from \"./useFetch\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\r\n\r\n  return (\r\n    <div className=\"home\">\r\n\r\n    <div className=\"container\">\r\n    <div className=\"body1\">\r\n    <div className=\"row\">\r\n      <div className=\"thumb-box\">\r\n      <Link to=\"/abtest\">\r\n        <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/53819/divinity-medium.png\" alt=\"\" />\r\n        <span className=\"overlay-box\">\r\n        <span className=\"meta\">Feb 20, 2019</span>\r\n        <span className=\"main-title\">A/B TEST</span>\r\n        <span className=\"description\">Perfom tests between recomondation algorithms...</span>\r\n          </span>\r\n      </Link>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home;\r\n","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Footer.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\NotFound.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\BlogDetails.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\Create.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\SignUp.js",["68"],"import \"./index.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useState } from \"react\";\r\n\r\nfunction POST(path, data) {\r\n  return fetch(`http://127.0.0.1:5000${path}`,\r\n  {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n  )\r\n}\r\nfunction SignUp({setPage}) {\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRePassword] = useState('');\r\n  // const [showPassword, setShowPassword] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n    const handleRegister = (e) => {\r\n      e.preventDefault();\r\n      setError(null);\r\n      if (!username || !email || !password || !repassword) {\r\n        setError('Please fill in all the fields');\r\n      } else if (password !== repassword) {\r\n        setError('Passwords dont match, please try again');\r\n      } else {\r\n        const signup_try = { username, email, password};\r\n        setIsPending(true);\r\n        fetch('/api/sign_up', {\r\n          method: 'POST',\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(signup_try)\r\n        }).then((res) => {\r\n          if (!res.ok) {\r\n            throw Error('could not sign in');\r\n          }\r\n          // history.go(-1);\r\n          setIsPending(false);\r\n          setError(null);\r\n          history.push('/');\r\n        })\r\n        .catch((err) => {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        })\r\n        }\r\n      }\r\n\r\n\r\n  return (\r\n        <div className=\"form-container\">\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">Sign up</div>\r\n          { error && <div class=\"message-container message-container--error\"><div class=\"message2\">{error}</div></div>}\r\n          </div>\r\n          <div className=\"inputs-container\">\r\n            <input className=\"input input__email\" required type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"username\" id=\"uname\" name=\"uname\" />\r\n            <input className=\"input input__email\" required type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"email address\" id=\"email\" name=\"email\" />\r\n            <input className=\"input input__password\" required type='password' value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"password\" id=\"pwd\" name=\"pwd\" />\r\n            <input className=\"input input__password\" required type='password' value={repassword} onChange={(e) => setRePassword(e.target.value)} placeholder=\"rewrite password\" id=\"repwd\" name=\"repwd\" />\r\n          </div>\r\n          \r\n          <div className=\"buttons-container\">\r\n            { !isPending && <button className=\"option option__login\" onClick={handleRegister}>Log In</button> }\r\n            { isPending && <button disabled className=\"option option__login\">Logging in...</button>}\r\n          </div>\r\n          <p>Already have an account?</p><Link to=\"/sign_in\" style={{color: '#f1356d'}}>Sign in</Link>\r\n        </div>);\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\dev\\Programming-project-databases\\react-frontend\\src\\SignIn.js",["69","70","71","72"],"import \"./index.css\"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n// function myFunction() {\r\n//   var x = document.getElementById(\"myInput\");\r\n//   if (x.type === \"password\") {\r\n//     x.type = \"text\";\r\n//   } else {\r\n//     x.type = \"password\";\r\n//   }\r\n// }\r\nfunction POST(path, data) {\r\n  return fetch(`http://127.0.0.1:5000${path}`,\r\n  {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    }\r\n  )\r\n}\r\n\r\n\r\nfunction SignIn(){\r\n    const handleLogin= e => {\r\n      e.preventDefault();\r\n      var username = document.getElementById(\"Sign_In_username\").value;\r\n      var password = document.getElementById(\"Sign_In_password\").value;\r\n      POST('/logging_in',{username:username, password:password})\r\n      console.log(\"hello\")\r\n    }\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const [showPassword, setShowPassword] = useState(false);\r\n    // const [rememberMe, setRememberMe] = useState(false);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const login_try = { username, password};\r\n\r\n      setIsPending(true);\r\n\r\n      fetch('/api/sign_in', {\r\n        method: 'POST',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(login_try)\r\n      }).then((res) => {\r\n        if (!res.ok) {\r\n          throw Error('could not sign in');\r\n        }\r\n        // history.go(-1);\r\n        setIsPending(false);\r\n        history.push('/');\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n      }\r\n\r\n  return (\r\n      // <div style={{ backgroundImage: `url(${artur})`}}>\r\n      <div className=\"form-container\">\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">Login</div>\r\n          { error && <div class=\"message-container message-container--error\"><div class=\"message2\">{error}</div></div>}\r\n          </div>\r\n          <div className=\"inputs-container\">\r\n            <input className=\"input input__email\" required type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"username or email address\" id=\"uname\" name=\"uname\" />\r\n            <input className=\"input input__password\" required type='password' value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"password\" id=\"pwd\" name=\"pwd\" />\r\n          </div>\r\n          \r\n          <div className=\"buttons-container\">\r\n            { !isPending && <button className=\"option option__login\" onClick={handleSubmit}>Log In</button> }\r\n            { isPending && <button disabled className=\"option option__login\">Logging in...</button>}\r\n          </div>\r\n          <p>Don't have an account?</p><Link to=\"/sign_up\" style={{color: '#f1356d'}}>Sign up</Link>\r\n        </div>\r\n        // </div>\r\n        );\r\n      {/* <div className=\"Sign_In_Rectangle\">\r\n          <form onSubmit={handleSubmit}>\r\n          <label className=\"login\">Login</label>\r\n          <input className=\"Sign_In_username\" required type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username\" id=\"username\" name=\"username\"/>\r\n          <input className=\"Sign_In_password\" required type={showPassword ? 'text' : 'password'} value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Username\" id=\"username\" name=\"username\"/>\r\n          <ul className=\"Sign_In_checkboxes\">\r\n              <li>\r\n                <input className=\"checkbox1\" type={\"checkbox\"} onClick={() => setShowPassword(!showPassword)}/>Show password\r\n              </li>\r\n            <li>\r\n              <input className=\"checkbox2\" type={\"checkbox\"} onClick={() => setRememberMe(!rememberMe)}/>Remember me\r\n            </li>\r\n          </ul>\r\n            <div className=\"Sign_In_noacc\">\r\n                <label>Don't have an account? </label>\r\n                <Link to=\"/sign_up\">Sign Up!</Link>\r\n            </div>\r\n            <li className=\"login__button\">\r\n                { !isPending && <button className=\"Log_In whaty\">Log in</button> }\r\n                { isPending && <button disabled className=\"Log_In whaty\">Logging in...</button> }\r\n            </li>\r\n            </form>\r\n        </div> */}\r\n}\r\n\r\nexport default SignIn","C:\\dev\\Programming-project-databases\\react-frontend\\src\\Account.js",[],"C:\\dev\\Programming-project-databases\\react-frontend\\src\\Contact.js",["73"],"import \"./index.css\"\r\n\r\nfunction Contact() {\r\n  return (\r\n\r\n      <div className=\"Contact\">\r\n        <div className=\"Contact_Rectangle\" >\r\n          <p className=\"Contact_us\">Contact us</p>\r\n            <input className=\"contact_name\" type=\"text\" placeholder=\"Enter name\" id=\"fname1\" name=\"fname1\"/>\r\n            <input className=\"contact_email\" type=\"text\" id=\"fname2\" placeholder=\"Enter email\" name=\"fname2\"/>\r\n              <textarea className=\"contact_text\" type=\"text\" id=\"fname3\" placeholder=\"Type your question/comment\"\r\n                        name=\"fname3\"></textarea>\r\n                <a className=\"button-purple contact-Submit-btn\" >Submit</a>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","C:\\dev\\Programming-project-databases\\react-frontend\\src\\useFetch.js",[],["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":15,"column":10,"nodeType":"82","messageId":"83","endLine":15,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":15,"column":27,"nodeType":"82","messageId":"83","endLine":15,"endColumn":45},{"ruleId":"80","severity":1,"message":"85","line":5,"column":11,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":5,"column":18,"nodeType":"82","messageId":"83","endLine":5,"endColumn":27},{"ruleId":"80","severity":1,"message":"87","line":5,"column":35,"nodeType":"82","messageId":"83","endLine":5,"endColumn":40},{"ruleId":"80","severity":1,"message":"88","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":14},{"ruleId":"80","severity":1,"message":"89","line":2,"column":26,"nodeType":"82","messageId":"83","endLine":2,"endColumn":35},{"ruleId":"80","severity":1,"message":"90","line":29,"column":11,"nodeType":"82","messageId":"83","endLine":29,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":90,"column":7,"nodeType":"93","messageId":"94","endLine":112,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":90,"column":7,"nodeType":"93","messageId":"97","endLine":112,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":13,"column":17,"nodeType":"100","endLine":13,"endColumn":66},{"ruleId":"76","replacedBy":"101"},{"ruleId":"78","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'setIsAuthenticated' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'blogs' is assigned a value but never used.","'POST' is defined but never used.","'useEffect' is defined but never used.","'handleLogin' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["103"],["104"],"no-global-assign","no-unsafe-negation"]